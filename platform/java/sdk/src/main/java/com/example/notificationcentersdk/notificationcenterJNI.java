/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.3.1
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.example.notificationcentersdk;

public class notificationcenterJNI {
  public final static native long new_SDKManager();
  public final static native void delete_SDKManager(long jarg1);
  public final static native void SDKManager_configure(long jarg1, SDKManager jarg1_, String jarg2);
  public final static native void SDKManager_connect(long jarg1, SDKManager jarg1_, String jarg2);
  public final static native void SDKManager_setWebsocketEventListener(long jarg1, SDKManager jarg1_, long jarg2, ConnectionListener jarg2_);
  public final static native void SDKManager_setWebSocket(long jarg1, SDKManager jarg1_, long jarg2);
  public final static native long SDKManager_getBusinessManager(long jarg1, SDKManager jarg1_);
  public final static native long SDKManager_poll(long jarg1, SDKManager jarg1_);
  public final static native long new_BusinessManager(long jarg1);
  public final static native void BusinessManager_Send(long jarg1, BusinessManager jarg1_, String jarg2);
  public final static native void BusinessManager_Observe(long jarg1, BusinessManager jarg1_, long jarg2);
  public final static native void BusinessManager_CancelObserve(long jarg1, BusinessManager jarg1_, long jarg2);
  public final static native long BusinessManager_ListenAircraftLocation(long jarg1, BusinessManager jarg1_, long jarg2, long jarg3, String jarg4, long jarg5);
  public final static native void delete_BusinessManager(long jarg1);
  public final static native void delete_ConnectionListener(long jarg1);
  public final static native void ConnectionListener_OnMessage(long jarg1, ConnectionListener jarg1_, String jarg2);
  public final static native void ConnectionListener_OnOpen(long jarg1, ConnectionListener jarg1_);
  public final static native void ConnectionListener_OnClose(long jarg1, ConnectionListener jarg1_);
  public final static native void ConnectionListener_OnError(long jarg1, ConnectionListener jarg1_, String jarg2);
  public final static native long new_ConnectionListener();
  public final static native void ConnectionListener_director_connect(ConnectionListener obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void ConnectionListener_change_ownership(ConnectionListener obj, long cptr, boolean take_or_release);

  public static void SwigDirector_ConnectionListener_OnMessage(ConnectionListener jself, String message) {
    jself.OnMessage(message);
  }
  public static void SwigDirector_ConnectionListener_OnOpen(ConnectionListener jself) {
    jself.OnOpen();
  }
  public static void SwigDirector_ConnectionListener_OnClose(ConnectionListener jself) {
    jself.OnClose();
  }
  public static void SwigDirector_ConnectionListener_OnError(ConnectionListener jself, String error) {
    jself.OnError(error);
  }

  private final static native void swig_module_init();
  static {
    swig_module_init();
  }
}
