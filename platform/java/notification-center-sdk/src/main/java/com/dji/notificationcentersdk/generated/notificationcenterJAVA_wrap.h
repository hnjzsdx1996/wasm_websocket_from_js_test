/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.3.1
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

#ifndef SWIG_notificationcenter_WRAP_H_
#define SWIG_notificationcenter_WRAP_H_

class SwigDirector_AircraftLocationCallback : public AircraftLocationCallback, public Swig::Director {

public:
    void swig_connect_director(JNIEnv *jenv, jobject jself, jclass jcls, bool swig_mem_own, bool weak_global);
    SwigDirector_AircraftLocationCallback(JNIEnv *jenv);
    virtual ~SwigDirector_AircraftLocationCallback();
    virtual void invoke(AircraftLocation const &message);
public:
    bool swig_overrides(int n) {
      return (n < 1 ? swig_override[n] : false);
    }
protected:
    Swig::BoolArray<1> swig_override;
};

class SwigDirector_AircraftAttitudeCallback : public AircraftAttitudeCallback, public Swig::Director {

public:
    void swig_connect_director(JNIEnv *jenv, jobject jself, jclass jcls, bool swig_mem_own, bool weak_global);
    SwigDirector_AircraftAttitudeCallback(JNIEnv *jenv);
    virtual ~SwigDirector_AircraftAttitudeCallback();
    virtual void invoke(AircraftAttitude const &message);
public:
    bool swig_overrides(int n) {
      return (n < 1 ? swig_override[n] : false);
    }
protected:
    Swig::BoolArray<1> swig_override;
};

class SwigDirector_AircraftSpeedCallback : public AircraftSpeedCallback, public Swig::Director {

public:
    void swig_connect_director(JNIEnv *jenv, jobject jself, jclass jcls, bool swig_mem_own, bool weak_global);
    SwigDirector_AircraftSpeedCallback(JNIEnv *jenv);
    virtual ~SwigDirector_AircraftSpeedCallback();
    virtual void invoke(AircraftSpeed const &message);
public:
    bool swig_overrides(int n) {
      return (n < 1 ? swig_override[n] : false);
    }
protected:
    Swig::BoolArray<1> swig_override;
};

class SwigDirector_AircraftBatteryInfoCallback : public AircraftBatteryInfoCallback, public Swig::Director {

public:
    void swig_connect_director(JNIEnv *jenv, jobject jself, jclass jcls, bool swig_mem_own, bool weak_global);
    SwigDirector_AircraftBatteryInfoCallback(JNIEnv *jenv);
    virtual ~SwigDirector_AircraftBatteryInfoCallback();
    virtual void invoke(AircraftBatteryInfo const &message);
public:
    bool swig_overrides(int n) {
      return (n < 1 ? swig_override[n] : false);
    }
protected:
    Swig::BoolArray<1> swig_override;
};

class SwigDirector_AircraftControlCodeCallback : public AircraftControlCodeCallback, public Swig::Director {

public:
    void swig_connect_director(JNIEnv *jenv, jobject jself, jclass jcls, bool swig_mem_own, bool weak_global);
    SwigDirector_AircraftControlCodeCallback(JNIEnv *jenv);
    virtual ~SwigDirector_AircraftControlCodeCallback();
    virtual void invoke(AircraftControlCode const &message);
public:
    bool swig_overrides(int n) {
      return (n < 1 ? swig_override[n] : false);
    }
protected:
    Swig::BoolArray<1> swig_override;
};

class SwigDirector_AircraftWindSpeedCallback : public AircraftWindSpeedCallback, public Swig::Director {

public:
    void swig_connect_director(JNIEnv *jenv, jobject jself, jclass jcls, bool swig_mem_own, bool weak_global);
    SwigDirector_AircraftWindSpeedCallback(JNIEnv *jenv);
    virtual ~SwigDirector_AircraftWindSpeedCallback();
    virtual void invoke(AircraftWindSpeed const &message);
public:
    bool swig_overrides(int n) {
      return (n < 1 ? swig_override[n] : false);
    }
protected:
    Swig::BoolArray<1> swig_override;
};

class SwigDirector_AircraftModeCodeCallback : public AircraftModeCodeCallback, public Swig::Director {

public:
    void swig_connect_director(JNIEnv *jenv, jobject jself, jclass jcls, bool swig_mem_own, bool weak_global);
    SwigDirector_AircraftModeCodeCallback(JNIEnv *jenv);
    virtual ~SwigDirector_AircraftModeCodeCallback();
    virtual void invoke(AircraftModeCode const &message);
public:
    bool swig_overrides(int n) {
      return (n < 1 ? swig_override[n] : false);
    }
protected:
    Swig::BoolArray<1> swig_override;
};

class SwigDirector_DroneInDockCallback : public DroneInDockCallback, public Swig::Director {

public:
    void swig_connect_director(JNIEnv *jenv, jobject jself, jclass jcls, bool swig_mem_own, bool weak_global);
    SwigDirector_DroneInDockCallback(JNIEnv *jenv);
    virtual ~SwigDirector_DroneInDockCallback();
    virtual void invoke(DroneInDock const &message);
public:
    bool swig_overrides(int n) {
      return (n < 1 ? swig_override[n] : false);
    }
protected:
    Swig::BoolArray<1> swig_override;
};

class SwigDirector_SDKSubscribeResultCallback : public SDKSubscribeResultCallback, public Swig::Director {

public:
    void swig_connect_director(JNIEnv *jenv, jobject jself, jclass jcls, bool swig_mem_own, bool weak_global);
    SwigDirector_SDKSubscribeResultCallback(JNIEnv *jenv);
    virtual ~SwigDirector_SDKSubscribeResultCallback();
    virtual void invoke(NotificationCenterErrorCode const &result);
public:
    bool swig_overrides(int n) {
      return (n < 1 ? swig_override[n] : false);
    }
protected:
    Swig::BoolArray<1> swig_override;
};

class SwigDirector_DeviceOnlineStatusCallback : public DeviceOnlineStatusCallback, public Swig::Director {

public:
    void swig_connect_director(JNIEnv *jenv, jobject jself, jclass jcls, bool swig_mem_own, bool weak_global);
    SwigDirector_DeviceOnlineStatusCallback(JNIEnv *jenv);
    virtual ~SwigDirector_DeviceOnlineStatusCallback();
    virtual void invoke(DeviceOnlineStatus const &message);
public:
    bool swig_overrides(int n) {
      return (n < 1 ? swig_override[n] : false);
    }
protected:
    Swig::BoolArray<1> swig_override;
};

class SwigDirector_AircraftPayloadsListCallback : public AircraftPayloadsListCallback, public Swig::Director {

public:
    void swig_connect_director(JNIEnv *jenv, jobject jself, jclass jcls, bool swig_mem_own, bool weak_global);
    SwigDirector_AircraftPayloadsListCallback(JNIEnv *jenv);
    virtual ~SwigDirector_AircraftPayloadsListCallback();
    virtual void invoke(AircraftPayloadsList const &message);
public:
    bool swig_overrides(int n) {
      return (n < 1 ? swig_override[n] : false);
    }
protected:
    Swig::BoolArray<1> swig_override;
};

class SwigDirector_DockLocationCallback : public DockLocationCallback, public Swig::Director {

public:
    void swig_connect_director(JNIEnv *jenv, jobject jself, jclass jcls, bool swig_mem_own, bool weak_global);
    SwigDirector_DockLocationCallback(JNIEnv *jenv);
    virtual ~SwigDirector_DockLocationCallback();
    virtual void invoke(DockLocation const &message);
public:
    bool swig_overrides(int n) {
      return (n < 1 ? swig_override[n] : false);
    }
protected:
    Swig::BoolArray<1> swig_override;
};

class SwigDirector_AircraftPayloadsCameraLiveviewWorldRegionCallback : public AircraftPayloadsCameraLiveviewWorldRegionCallback, public Swig::Director {

public:
    void swig_connect_director(JNIEnv *jenv, jobject jself, jclass jcls, bool swig_mem_own, bool weak_global);
    SwigDirector_AircraftPayloadsCameraLiveviewWorldRegionCallback(JNIEnv *jenv);
    virtual ~SwigDirector_AircraftPayloadsCameraLiveviewWorldRegionCallback();
    virtual void invoke(AircraftPayloadsCameraLiveviewWorldRegion const &message);
public:
    bool swig_overrides(int n) {
      return (n < 1 ? swig_override[n] : false);
    }
protected:
    Swig::BoolArray<1> swig_override;
};

class SwigDirector_AircraftPayloadsGimbalAttitudeCallback : public AircraftPayloadsGimbalAttitudeCallback, public Swig::Director {

public:
    void swig_connect_director(JNIEnv *jenv, jobject jself, jclass jcls, bool swig_mem_own, bool weak_global);
    SwigDirector_AircraftPayloadsGimbalAttitudeCallback(JNIEnv *jenv);
    virtual ~SwigDirector_AircraftPayloadsGimbalAttitudeCallback();
    virtual void invoke(AircraftPayloadsGimbalAttitude const &message);
public:
    bool swig_overrides(int n) {
      return (n < 1 ? swig_override[n] : false);
    }
protected:
    Swig::BoolArray<1> swig_override;
};

class SwigDirector_ConnectionListener : public WebsocketEvent, public Swig::Director {

public:
    void swig_connect_director(JNIEnv *jenv, jobject jself, jclass jcls, bool swig_mem_own, bool weak_global);
    SwigDirector_ConnectionListener(JNIEnv *jenv);
    virtual ~SwigDirector_ConnectionListener();
    virtual void OnMessage(std::string const &message);
    virtual void OnOpen();
    virtual void OnClose();
    virtual void OnError(std::string const &error);
public:
    bool swig_overrides(int n) {
      return (n < 4 ? swig_override[n] : false);
    }
protected:
    Swig::BoolArray<4> swig_override;
};


#endif
