/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.3.1
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.dji.notificationcentersdk.generated;

public class notificationcenterJNI {
  public final static native void AircraftLocation_height_set(long jarg1, AircraftLocation jarg1_, double jarg2);
  public final static native double AircraftLocation_height_get(long jarg1, AircraftLocation jarg1_);
  public final static native void AircraftLocation_elevation_set(long jarg1, AircraftLocation jarg1_, double jarg2);
  public final static native double AircraftLocation_elevation_get(long jarg1, AircraftLocation jarg1_);
  public final static native void AircraftLocation_latitude_set(long jarg1, AircraftLocation jarg1_, double jarg2);
  public final static native double AircraftLocation_latitude_get(long jarg1, AircraftLocation jarg1_);
  public final static native void AircraftLocation_longitude_set(long jarg1, AircraftLocation jarg1_, double jarg2);
  public final static native double AircraftLocation_longitude_get(long jarg1, AircraftLocation jarg1_);
  public final static native long new_AircraftLocation__SWIG_0();
  public final static native long new_AircraftLocation__SWIG_1(double jarg1, double jarg2, double jarg3, double jarg4);
  public final static native void delete_AircraftLocation(long jarg1);
  public final static native void AircraftAttitude_attitude_head_set(long jarg1, AircraftAttitude jarg1_, double jarg2);
  public final static native double AircraftAttitude_attitude_head_get(long jarg1, AircraftAttitude jarg1_);
  public final static native void AircraftAttitude_attitude_pitch_set(long jarg1, AircraftAttitude jarg1_, double jarg2);
  public final static native double AircraftAttitude_attitude_pitch_get(long jarg1, AircraftAttitude jarg1_);
  public final static native void AircraftAttitude_attitude_roll_set(long jarg1, AircraftAttitude jarg1_, double jarg2);
  public final static native double AircraftAttitude_attitude_roll_get(long jarg1, AircraftAttitude jarg1_);
  public final static native long new_AircraftAttitude__SWIG_0();
  public final static native long new_AircraftAttitude__SWIG_1(double jarg1, double jarg2, double jarg3);
  public final static native void delete_AircraftAttitude(long jarg1);
  public final static native void AircraftSpeed_horizontal_speed_set(long jarg1, AircraftSpeed jarg1_, double jarg2);
  public final static native double AircraftSpeed_horizontal_speed_get(long jarg1, AircraftSpeed jarg1_);
  public final static native void AircraftSpeed_vertical_speed_set(long jarg1, AircraftSpeed jarg1_, double jarg2);
  public final static native double AircraftSpeed_vertical_speed_get(long jarg1, AircraftSpeed jarg1_);
  public final static native long new_AircraftSpeed__SWIG_0();
  public final static native long new_AircraftSpeed__SWIG_1(double jarg1, double jarg2);
  public final static native void delete_AircraftSpeed(long jarg1);
  public final static native void BatteryInfo_capacity_percent_set(long jarg1, BatteryInfo jarg1_, int jarg2);
  public final static native int BatteryInfo_capacity_percent_get(long jarg1, BatteryInfo jarg1_);
  public final static native void BatteryInfo_firmware_version_set(long jarg1, BatteryInfo jarg1_, String jarg2);
  public final static native String BatteryInfo_firmware_version_get(long jarg1, BatteryInfo jarg1_);
  public final static native void BatteryInfo_high_voltage_storage_days_set(long jarg1, BatteryInfo jarg1_, int jarg2);
  public final static native int BatteryInfo_high_voltage_storage_days_get(long jarg1, BatteryInfo jarg1_);
  public final static native void BatteryInfo_index_set(long jarg1, BatteryInfo jarg1_, int jarg2);
  public final static native int BatteryInfo_index_get(long jarg1, BatteryInfo jarg1_);
  public final static native void BatteryInfo_loop_times_set(long jarg1, BatteryInfo jarg1_, int jarg2);
  public final static native int BatteryInfo_loop_times_get(long jarg1, BatteryInfo jarg1_);
  public final static native void BatteryInfo_sn_set(long jarg1, BatteryInfo jarg1_, String jarg2);
  public final static native String BatteryInfo_sn_get(long jarg1, BatteryInfo jarg1_);
  public final static native void BatteryInfo_sub_type_set(long jarg1, BatteryInfo jarg1_, int jarg2);
  public final static native int BatteryInfo_sub_type_get(long jarg1, BatteryInfo jarg1_);
  public final static native void BatteryInfo_temperature_set(long jarg1, BatteryInfo jarg1_, double jarg2);
  public final static native double BatteryInfo_temperature_get(long jarg1, BatteryInfo jarg1_);
  public final static native void BatteryInfo_type_set(long jarg1, BatteryInfo jarg1_, int jarg2);
  public final static native int BatteryInfo_type_get(long jarg1, BatteryInfo jarg1_);
  public final static native void BatteryInfo_voltage_set(long jarg1, BatteryInfo jarg1_, int jarg2);
  public final static native int BatteryInfo_voltage_get(long jarg1, BatteryInfo jarg1_);
  public final static native long new_BatteryInfo();
  public final static native void delete_BatteryInfo(long jarg1);
  public final static native void AircraftBatteryInfo_batteries_set(long jarg1, AircraftBatteryInfo jarg1_, long jarg2);
  public final static native long AircraftBatteryInfo_batteries_get(long jarg1, AircraftBatteryInfo jarg1_);
  public final static native void AircraftBatteryInfo_capacity_percent_set(long jarg1, AircraftBatteryInfo jarg1_, int jarg2);
  public final static native int AircraftBatteryInfo_capacity_percent_get(long jarg1, AircraftBatteryInfo jarg1_);
  public final static native void AircraftBatteryInfo_landing_power_set(long jarg1, AircraftBatteryInfo jarg1_, int jarg2);
  public final static native int AircraftBatteryInfo_landing_power_get(long jarg1, AircraftBatteryInfo jarg1_);
  public final static native void AircraftBatteryInfo_remain_flight_time_set(long jarg1, AircraftBatteryInfo jarg1_, int jarg2);
  public final static native int AircraftBatteryInfo_remain_flight_time_get(long jarg1, AircraftBatteryInfo jarg1_);
  public final static native void AircraftBatteryInfo_return_home_power_set(long jarg1, AircraftBatteryInfo jarg1_, int jarg2);
  public final static native int AircraftBatteryInfo_return_home_power_get(long jarg1, AircraftBatteryInfo jarg1_);
  public final static native long new_AircraftBatteryInfo();
  public final static native void delete_AircraftBatteryInfo(long jarg1);
  public final static native void AircraftControlCode_control_mode_set(long jarg1, AircraftControlCode jarg1_, int jarg2);
  public final static native int AircraftControlCode_control_mode_get(long jarg1, AircraftControlCode jarg1_);
  public final static native long new_AircraftControlCode__SWIG_0();
  public final static native long new_AircraftControlCode__SWIG_1(int jarg1);
  public final static native void delete_AircraftControlCode(long jarg1);
  public final static native void AircraftWindSpeed_wind_direction_set(long jarg1, AircraftWindSpeed jarg1_, int jarg2);
  public final static native int AircraftWindSpeed_wind_direction_get(long jarg1, AircraftWindSpeed jarg1_);
  public final static native void AircraftWindSpeed_wind_speed_set(long jarg1, AircraftWindSpeed jarg1_, double jarg2);
  public final static native double AircraftWindSpeed_wind_speed_get(long jarg1, AircraftWindSpeed jarg1_);
  public final static native long new_AircraftWindSpeed__SWIG_0();
  public final static native long new_AircraftWindSpeed__SWIG_1(int jarg1, double jarg2);
  public final static native void delete_AircraftWindSpeed(long jarg1);
  public final static native void AircraftModeCode_mode_code_set(long jarg1, AircraftModeCode jarg1_, int jarg2);
  public final static native int AircraftModeCode_mode_code_get(long jarg1, AircraftModeCode jarg1_);
  public final static native long new_AircraftModeCode__SWIG_0();
  public final static native long new_AircraftModeCode__SWIG_1(int jarg1);
  public final static native void delete_AircraftModeCode(long jarg1);
  public final static native void DroneInDock_drone_in_dock_set(long jarg1, DroneInDock jarg1_, int jarg2);
  public final static native int DroneInDock_drone_in_dock_get(long jarg1, DroneInDock jarg1_);
  public final static native long new_DroneInDock__SWIG_0();
  public final static native long new_DroneInDock__SWIG_1(int jarg1);
  public final static native void delete_DroneInDock(long jarg1);
  public final static native void delete_AircraftLocationCallback(long jarg1);
  public final static native void AircraftLocationCallback_invoke(long jarg1, AircraftLocationCallback jarg1_, long jarg2, AircraftLocation jarg2_);
  public final static native long new_AircraftLocationCallback();
  public final static native void AircraftLocationCallback_director_connect(AircraftLocationCallback obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void AircraftLocationCallback_change_ownership(AircraftLocationCallback obj, long cptr, boolean take_or_release);
  public final static native void delete_AircraftAttitudeCallback(long jarg1);
  public final static native void AircraftAttitudeCallback_invoke(long jarg1, AircraftAttitudeCallback jarg1_, long jarg2, AircraftAttitude jarg2_);
  public final static native long new_AircraftAttitudeCallback();
  public final static native void AircraftAttitudeCallback_director_connect(AircraftAttitudeCallback obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void AircraftAttitudeCallback_change_ownership(AircraftAttitudeCallback obj, long cptr, boolean take_or_release);
  public final static native void delete_AircraftSpeedCallback(long jarg1);
  public final static native void AircraftSpeedCallback_invoke(long jarg1, AircraftSpeedCallback jarg1_, long jarg2, AircraftSpeed jarg2_);
  public final static native long new_AircraftSpeedCallback();
  public final static native void AircraftSpeedCallback_director_connect(AircraftSpeedCallback obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void AircraftSpeedCallback_change_ownership(AircraftSpeedCallback obj, long cptr, boolean take_or_release);
  public final static native void delete_AircraftBatteryInfoCallback(long jarg1);
  public final static native void AircraftBatteryInfoCallback_invoke(long jarg1, AircraftBatteryInfoCallback jarg1_, long jarg2, AircraftBatteryInfo jarg2_);
  public final static native long new_AircraftBatteryInfoCallback();
  public final static native void AircraftBatteryInfoCallback_director_connect(AircraftBatteryInfoCallback obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void AircraftBatteryInfoCallback_change_ownership(AircraftBatteryInfoCallback obj, long cptr, boolean take_or_release);
  public final static native void delete_AircraftControlCodeCallback(long jarg1);
  public final static native void AircraftControlCodeCallback_invoke(long jarg1, AircraftControlCodeCallback jarg1_, long jarg2, AircraftControlCode jarg2_);
  public final static native long new_AircraftControlCodeCallback();
  public final static native void AircraftControlCodeCallback_director_connect(AircraftControlCodeCallback obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void AircraftControlCodeCallback_change_ownership(AircraftControlCodeCallback obj, long cptr, boolean take_or_release);
  public final static native void delete_AircraftWindSpeedCallback(long jarg1);
  public final static native void AircraftWindSpeedCallback_invoke(long jarg1, AircraftWindSpeedCallback jarg1_, long jarg2, AircraftWindSpeed jarg2_);
  public final static native long new_AircraftWindSpeedCallback();
  public final static native void AircraftWindSpeedCallback_director_connect(AircraftWindSpeedCallback obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void AircraftWindSpeedCallback_change_ownership(AircraftWindSpeedCallback obj, long cptr, boolean take_or_release);
  public final static native void delete_AircraftModeCodeCallback(long jarg1);
  public final static native void AircraftModeCodeCallback_invoke(long jarg1, AircraftModeCodeCallback jarg1_, long jarg2, AircraftModeCode jarg2_);
  public final static native long new_AircraftModeCodeCallback();
  public final static native void AircraftModeCodeCallback_director_connect(AircraftModeCodeCallback obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void AircraftModeCodeCallback_change_ownership(AircraftModeCodeCallback obj, long cptr, boolean take_or_release);
  public final static native void delete_DroneInDockCallback(long jarg1);
  public final static native void DroneInDockCallback_invoke(long jarg1, DroneInDockCallback jarg1_, long jarg2, DroneInDock jarg2_);
  public final static native long new_DroneInDockCallback();
  public final static native void DroneInDockCallback_director_connect(DroneInDockCallback obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void DroneInDockCallback_change_ownership(DroneInDockCallback obj, long cptr, boolean take_or_release);
  public final static native void delete_SDKSubscribeResultCallback(long jarg1);
  public final static native void SDKSubscribeResultCallback_invoke(long jarg1, SDKSubscribeResultCallback jarg1_, int jarg2);
  public final static native long new_SDKSubscribeResultCallback();
  public final static native void SDKSubscribeResultCallback_director_connect(SDKSubscribeResultCallback obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void SDKSubscribeResultCallback_change_ownership(SDKSubscribeResultCallback obj, long cptr, boolean take_or_release);
  public final static native void DeviceOnlineStatus_device_status_set(long jarg1, DeviceOnlineStatus jarg1_, boolean jarg2);
  public final static native boolean DeviceOnlineStatus_device_status_get(long jarg1, DeviceOnlineStatus jarg1_);
  public final static native void DeviceOnlineStatus_device_callsign_set(long jarg1, DeviceOnlineStatus jarg1_, String jarg2);
  public final static native String DeviceOnlineStatus_device_callsign_get(long jarg1, DeviceOnlineStatus jarg1_);
  public final static native void DeviceOnlineStatus_device_model_set(long jarg1, DeviceOnlineStatus jarg1_, String jarg2);
  public final static native String DeviceOnlineStatus_device_model_get(long jarg1, DeviceOnlineStatus jarg1_);
  public final static native void DeviceOnlineStatus_device_type_set(long jarg1, DeviceOnlineStatus jarg1_, String jarg2);
  public final static native String DeviceOnlineStatus_device_type_get(long jarg1, DeviceOnlineStatus jarg1_);
  public final static native long new_DeviceOnlineStatus__SWIG_0();
  public final static native long new_DeviceOnlineStatus__SWIG_1(boolean jarg1, String jarg2, String jarg3, String jarg4);
  public final static native void delete_DeviceOnlineStatus(long jarg1);
  public final static native void CameraLiveviewWorldRegion_bottom_set(long jarg1, CameraLiveviewWorldRegion jarg1_, double jarg2);
  public final static native double CameraLiveviewWorldRegion_bottom_get(long jarg1, CameraLiveviewWorldRegion jarg1_);
  public final static native void CameraLiveviewWorldRegion_left_set(long jarg1, CameraLiveviewWorldRegion jarg1_, double jarg2);
  public final static native double CameraLiveviewWorldRegion_left_get(long jarg1, CameraLiveviewWorldRegion jarg1_);
  public final static native void CameraLiveviewWorldRegion_right_set(long jarg1, CameraLiveviewWorldRegion jarg1_, double jarg2);
  public final static native double CameraLiveviewWorldRegion_right_get(long jarg1, CameraLiveviewWorldRegion jarg1_);
  public final static native void CameraLiveviewWorldRegion_top_set(long jarg1, CameraLiveviewWorldRegion jarg1_, double jarg2);
  public final static native double CameraLiveviewWorldRegion_top_get(long jarg1, CameraLiveviewWorldRegion jarg1_);
  public final static native long new_CameraLiveviewWorldRegion__SWIG_0();
  public final static native long new_CameraLiveviewWorldRegion__SWIG_1(double jarg1, double jarg2, double jarg3, double jarg4);
  public final static native void delete_CameraLiveviewWorldRegion(long jarg1);
  public final static native void AircraftPayloadsCameraLiveviewWorldRegion_payloads_list_set(long jarg1, AircraftPayloadsCameraLiveviewWorldRegion jarg1_, long jarg2, CameraLiveviewWorldRegionMap jarg2_);
  public final static native long AircraftPayloadsCameraLiveviewWorldRegion_payloads_list_get(long jarg1, AircraftPayloadsCameraLiveviewWorldRegion jarg1_);
  public final static native long new_AircraftPayloadsCameraLiveviewWorldRegion();
  public final static native void delete_AircraftPayloadsCameraLiveviewWorldRegion(long jarg1);
  public final static native void AircraftPayloadGimbalAttitude_gimbal_pitch_set(long jarg1, AircraftPayloadGimbalAttitude jarg1_, double jarg2);
  public final static native double AircraftPayloadGimbalAttitude_gimbal_pitch_get(long jarg1, AircraftPayloadGimbalAttitude jarg1_);
  public final static native void AircraftPayloadGimbalAttitude_gimbal_roll_set(long jarg1, AircraftPayloadGimbalAttitude jarg1_, double jarg2);
  public final static native double AircraftPayloadGimbalAttitude_gimbal_roll_get(long jarg1, AircraftPayloadGimbalAttitude jarg1_);
  public final static native void AircraftPayloadGimbalAttitude_gimbal_yaw_set(long jarg1, AircraftPayloadGimbalAttitude jarg1_, double jarg2);
  public final static native double AircraftPayloadGimbalAttitude_gimbal_yaw_get(long jarg1, AircraftPayloadGimbalAttitude jarg1_);
  public final static native long new_AircraftPayloadGimbalAttitude__SWIG_0();
  public final static native long new_AircraftPayloadGimbalAttitude__SWIG_1(double jarg1, double jarg2, double jarg3);
  public final static native void delete_AircraftPayloadGimbalAttitude(long jarg1);
  public final static native void AircraftPayloadsGimbalAttitude_payloads_gimbal_attitude_set(long jarg1, AircraftPayloadsGimbalAttitude jarg1_, long jarg2, AircraftPayloadGimbalAttitudeMap jarg2_);
  public final static native long AircraftPayloadsGimbalAttitude_payloads_gimbal_attitude_get(long jarg1, AircraftPayloadsGimbalAttitude jarg1_);
  public final static native long new_AircraftPayloadsGimbalAttitude();
  public final static native void delete_AircraftPayloadsGimbalAttitude(long jarg1);
  public final static native void AircraftPayloadsList_payloads_list_set(long jarg1, AircraftPayloadsList jarg1_, long jarg2, StringVector jarg2_);
  public final static native long AircraftPayloadsList_payloads_list_get(long jarg1, AircraftPayloadsList jarg1_);
  public final static native long new_AircraftPayloadsList();
  public final static native void delete_AircraftPayloadsList(long jarg1);
  public final static native void DockLocation_heading_set(long jarg1, DockLocation jarg1_, double jarg2);
  public final static native double DockLocation_heading_get(long jarg1, DockLocation jarg1_);
  public final static native void DockLocation_height_set(long jarg1, DockLocation jarg1_, double jarg2);
  public final static native double DockLocation_height_get(long jarg1, DockLocation jarg1_);
  public final static native void DockLocation_latitude_set(long jarg1, DockLocation jarg1_, double jarg2);
  public final static native double DockLocation_latitude_get(long jarg1, DockLocation jarg1_);
  public final static native void DockLocation_longitude_set(long jarg1, DockLocation jarg1_, double jarg2);
  public final static native double DockLocation_longitude_get(long jarg1, DockLocation jarg1_);
  public final static native long new_DockLocation__SWIG_0();
  public final static native long new_DockLocation__SWIG_1(double jarg1, double jarg2, double jarg3, double jarg4);
  public final static native void delete_DockLocation(long jarg1);
  public final static native void delete_DeviceOnlineStatusCallback(long jarg1);
  public final static native void DeviceOnlineStatusCallback_invoke(long jarg1, DeviceOnlineStatusCallback jarg1_, long jarg2, DeviceOnlineStatus jarg2_);
  public final static native long new_DeviceOnlineStatusCallback();
  public final static native void DeviceOnlineStatusCallback_director_connect(DeviceOnlineStatusCallback obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void DeviceOnlineStatusCallback_change_ownership(DeviceOnlineStatusCallback obj, long cptr, boolean take_or_release);
  public final static native void delete_AircraftPayloadsListCallback(long jarg1);
  public final static native void AircraftPayloadsListCallback_invoke(long jarg1, AircraftPayloadsListCallback jarg1_, long jarg2, AircraftPayloadsList jarg2_);
  public final static native long new_AircraftPayloadsListCallback();
  public final static native void AircraftPayloadsListCallback_director_connect(AircraftPayloadsListCallback obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void AircraftPayloadsListCallback_change_ownership(AircraftPayloadsListCallback obj, long cptr, boolean take_or_release);
  public final static native void delete_DockLocationCallback(long jarg1);
  public final static native void DockLocationCallback_invoke(long jarg1, DockLocationCallback jarg1_, long jarg2, DockLocation jarg2_);
  public final static native long new_DockLocationCallback();
  public final static native void DockLocationCallback_director_connect(DockLocationCallback obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void DockLocationCallback_change_ownership(DockLocationCallback obj, long cptr, boolean take_or_release);
  public final static native void delete_AircraftPayloadsCameraLiveviewWorldRegionCallback(long jarg1);
  public final static native void AircraftPayloadsCameraLiveviewWorldRegionCallback_invoke(long jarg1, AircraftPayloadsCameraLiveviewWorldRegionCallback jarg1_, long jarg2, AircraftPayloadsCameraLiveviewWorldRegion jarg2_);
  public final static native long new_AircraftPayloadsCameraLiveviewWorldRegionCallback();
  public final static native void AircraftPayloadsCameraLiveviewWorldRegionCallback_director_connect(AircraftPayloadsCameraLiveviewWorldRegionCallback obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void AircraftPayloadsCameraLiveviewWorldRegionCallback_change_ownership(AircraftPayloadsCameraLiveviewWorldRegionCallback obj, long cptr, boolean take_or_release);
  public final static native void delete_AircraftPayloadsGimbalAttitudeCallback(long jarg1);
  public final static native void AircraftPayloadsGimbalAttitudeCallback_invoke(long jarg1, AircraftPayloadsGimbalAttitudeCallback jarg1_, long jarg2, AircraftPayloadsGimbalAttitude jarg2_);
  public final static native long new_AircraftPayloadsGimbalAttitudeCallback();
  public final static native void AircraftPayloadsGimbalAttitudeCallback_director_connect(AircraftPayloadsGimbalAttitudeCallback obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void AircraftPayloadsGimbalAttitudeCallback_change_ownership(AircraftPayloadsGimbalAttitudeCallback obj, long cptr, boolean take_or_release);
  public final static native long new_StringVector__SWIG_0();
  public final static native long new_StringVector__SWIG_1(long jarg1, StringVector jarg1_);
  public final static native boolean StringVector_isEmpty(long jarg1, StringVector jarg1_);
  public final static native void StringVector_clear(long jarg1, StringVector jarg1_);
  public final static native long new_StringVector__SWIG_2(int jarg1, String jarg2);
  public final static native int StringVector_doCapacity(long jarg1, StringVector jarg1_);
  public final static native void StringVector_doReserve(long jarg1, StringVector jarg1_, int jarg2);
  public final static native int StringVector_doSize(long jarg1, StringVector jarg1_);
  public final static native void StringVector_doAdd__SWIG_0(long jarg1, StringVector jarg1_, String jarg2);
  public final static native void StringVector_doAdd__SWIG_1(long jarg1, StringVector jarg1_, int jarg2, String jarg3);
  public final static native String StringVector_doRemove(long jarg1, StringVector jarg1_, int jarg2);
  public final static native String StringVector_doGet(long jarg1, StringVector jarg1_, int jarg2);
  public final static native String StringVector_doSet(long jarg1, StringVector jarg1_, int jarg2, String jarg3);
  public final static native void StringVector_doRemoveRange(long jarg1, StringVector jarg1_, int jarg2, int jarg3);
  public final static native void delete_StringVector(long jarg1);
  public final static native long new_CameraLiveviewWorldRegionMap__SWIG_0();
  public final static native long new_CameraLiveviewWorldRegionMap__SWIG_1(long jarg1, CameraLiveviewWorldRegionMap jarg1_);
  public final static native long CameraLiveviewWorldRegionMap_Iterator_getNextUnchecked(long jarg1, CameraLiveviewWorldRegionMap.Iterator jarg1_);
  public final static native boolean CameraLiveviewWorldRegionMap_Iterator_isNot(long jarg1, CameraLiveviewWorldRegionMap.Iterator jarg1_, long jarg2, CameraLiveviewWorldRegionMap.Iterator jarg2_);
  public final static native String CameraLiveviewWorldRegionMap_Iterator_getKey(long jarg1, CameraLiveviewWorldRegionMap.Iterator jarg1_);
  public final static native long CameraLiveviewWorldRegionMap_Iterator_getValue(long jarg1, CameraLiveviewWorldRegionMap.Iterator jarg1_);
  public final static native void CameraLiveviewWorldRegionMap_Iterator_setValue(long jarg1, CameraLiveviewWorldRegionMap.Iterator jarg1_, long jarg2, CameraLiveviewWorldRegion jarg2_);
  public final static native void delete_CameraLiveviewWorldRegionMap_Iterator(long jarg1);
  public final static native boolean CameraLiveviewWorldRegionMap_isEmpty(long jarg1, CameraLiveviewWorldRegionMap jarg1_);
  public final static native void CameraLiveviewWorldRegionMap_clear(long jarg1, CameraLiveviewWorldRegionMap jarg1_);
  public final static native long CameraLiveviewWorldRegionMap_find(long jarg1, CameraLiveviewWorldRegionMap jarg1_, String jarg2);
  public final static native long CameraLiveviewWorldRegionMap_begin(long jarg1, CameraLiveviewWorldRegionMap jarg1_);
  public final static native long CameraLiveviewWorldRegionMap_end(long jarg1, CameraLiveviewWorldRegionMap jarg1_);
  public final static native int CameraLiveviewWorldRegionMap_sizeImpl(long jarg1, CameraLiveviewWorldRegionMap jarg1_);
  public final static native boolean CameraLiveviewWorldRegionMap_containsImpl(long jarg1, CameraLiveviewWorldRegionMap jarg1_, String jarg2);
  public final static native void CameraLiveviewWorldRegionMap_putUnchecked(long jarg1, CameraLiveviewWorldRegionMap jarg1_, String jarg2, long jarg3, CameraLiveviewWorldRegion jarg3_);
  public final static native void CameraLiveviewWorldRegionMap_removeUnchecked(long jarg1, CameraLiveviewWorldRegionMap jarg1_, long jarg2, CameraLiveviewWorldRegionMap.Iterator jarg2_);
  public final static native void delete_CameraLiveviewWorldRegionMap(long jarg1);
  public final static native long new_AircraftPayloadGimbalAttitudeMap__SWIG_0();
  public final static native long new_AircraftPayloadGimbalAttitudeMap__SWIG_1(long jarg1, AircraftPayloadGimbalAttitudeMap jarg1_);
  public final static native long AircraftPayloadGimbalAttitudeMap_Iterator_getNextUnchecked(long jarg1, AircraftPayloadGimbalAttitudeMap.Iterator jarg1_);
  public final static native boolean AircraftPayloadGimbalAttitudeMap_Iterator_isNot(long jarg1, AircraftPayloadGimbalAttitudeMap.Iterator jarg1_, long jarg2, AircraftPayloadGimbalAttitudeMap.Iterator jarg2_);
  public final static native String AircraftPayloadGimbalAttitudeMap_Iterator_getKey(long jarg1, AircraftPayloadGimbalAttitudeMap.Iterator jarg1_);
  public final static native long AircraftPayloadGimbalAttitudeMap_Iterator_getValue(long jarg1, AircraftPayloadGimbalAttitudeMap.Iterator jarg1_);
  public final static native void AircraftPayloadGimbalAttitudeMap_Iterator_setValue(long jarg1, AircraftPayloadGimbalAttitudeMap.Iterator jarg1_, long jarg2, AircraftPayloadGimbalAttitude jarg2_);
  public final static native void delete_AircraftPayloadGimbalAttitudeMap_Iterator(long jarg1);
  public final static native boolean AircraftPayloadGimbalAttitudeMap_isEmpty(long jarg1, AircraftPayloadGimbalAttitudeMap jarg1_);
  public final static native void AircraftPayloadGimbalAttitudeMap_clear(long jarg1, AircraftPayloadGimbalAttitudeMap jarg1_);
  public final static native long AircraftPayloadGimbalAttitudeMap_find(long jarg1, AircraftPayloadGimbalAttitudeMap jarg1_, String jarg2);
  public final static native long AircraftPayloadGimbalAttitudeMap_begin(long jarg1, AircraftPayloadGimbalAttitudeMap jarg1_);
  public final static native long AircraftPayloadGimbalAttitudeMap_end(long jarg1, AircraftPayloadGimbalAttitudeMap jarg1_);
  public final static native int AircraftPayloadGimbalAttitudeMap_sizeImpl(long jarg1, AircraftPayloadGimbalAttitudeMap jarg1_);
  public final static native boolean AircraftPayloadGimbalAttitudeMap_containsImpl(long jarg1, AircraftPayloadGimbalAttitudeMap jarg1_, String jarg2);
  public final static native void AircraftPayloadGimbalAttitudeMap_putUnchecked(long jarg1, AircraftPayloadGimbalAttitudeMap jarg1_, String jarg2, long jarg3, AircraftPayloadGimbalAttitude jarg3_);
  public final static native void AircraftPayloadGimbalAttitudeMap_removeUnchecked(long jarg1, AircraftPayloadGimbalAttitudeMap jarg1_, long jarg2, AircraftPayloadGimbalAttitudeMap.Iterator jarg2_);
  public final static native void delete_AircraftPayloadGimbalAttitudeMap(long jarg1);
  public final static native void SdkInitializeInfo_log_path_set(long jarg1, SdkInitializeInfo jarg1_, String jarg2);
  public final static native String SdkInitializeInfo_log_path_get(long jarg1, SdkInitializeInfo jarg1_);
  public final static native void SdkInitializeInfo_log_level_set(long jarg1, SdkInitializeInfo jarg1_, int jarg2);
  public final static native int SdkInitializeInfo_log_level_get(long jarg1, SdkInitializeInfo jarg1_);
  public final static native long new_SdkInitializeInfo__SWIG_0(String jarg1, int jarg2);
  public final static native long new_SdkInitializeInfo__SWIG_1(String jarg1);
  public final static native long new_SdkInitializeInfo__SWIG_2();
  public final static native void delete_SdkInitializeInfo(long jarg1);
  public final static native long new_SDKManager();
  public final static native void delete_SDKManager(long jarg1);
  public final static native void SDKManager_init(long jarg1, SDKManager jarg1_, long jarg2, SdkInitializeInfo jarg2_);
  public final static native boolean SDKManager_isInit(long jarg1, SDKManager jarg1_);
  public final static native void SDKManager_setWebsocketEventListener(long jarg1, SDKManager jarg1_, long jarg2, ConnectionListener jarg2_);
  public final static native void SDKManager_connect(long jarg1, SDKManager jarg1_, String jarg2);
  public final static native long SDKManager_getBusinessManager(long jarg1, SDKManager jarg1_);
  public final static native long SDKManager_poll();
  public final static native long new_BusinessManager(long jarg1);
  public final static native void BusinessManager_CancelObserve(long jarg1, BusinessManager jarg1_, long jarg2);
  public final static native long BusinessManager_ListenAircraftAttitude__SWIG_0(long jarg1, BusinessManager jarg1_, long jarg2, long jarg3, String jarg4, long jarg5);
  public final static native long BusinessManager_ListenAircraftBatteryInfo__SWIG_0(long jarg1, BusinessManager jarg1_, long jarg2, long jarg3, String jarg4, long jarg5);
  public final static native long BusinessManager_ListenAircraftControlCode__SWIG_0(long jarg1, BusinessManager jarg1_, long jarg2, long jarg3, String jarg4, long jarg5);
  public final static native long BusinessManager_ListenAircraftLocation__SWIG_0(long jarg1, BusinessManager jarg1_, long jarg2, long jarg3, String jarg4, long jarg5);
  public final static native long BusinessManager_ListenAircraftModeCode__SWIG_0(long jarg1, BusinessManager jarg1_, long jarg2, long jarg3, String jarg4, long jarg5);
  public final static native long BusinessManager_ListenAircraftPayloadsCameraLiveviewWorldRegion__SWIG_0(long jarg1, BusinessManager jarg1_, long jarg2, long jarg3, String jarg4, long jarg5);
  public final static native long BusinessManager_ListenAircraftPayloadsGimbalAttitude__SWIG_0(long jarg1, BusinessManager jarg1_, long jarg2, long jarg3, String jarg4, long jarg5);
  public final static native long BusinessManager_ListenAircraftPayloadsList__SWIG_0(long jarg1, BusinessManager jarg1_, long jarg2, long jarg3, String jarg4, long jarg5);
  public final static native long BusinessManager_ListenAircraftSpeed__SWIG_0(long jarg1, BusinessManager jarg1_, long jarg2, long jarg3, String jarg4, long jarg5);
  public final static native long BusinessManager_ListenAircraftWindSpeed__SWIG_0(long jarg1, BusinessManager jarg1_, long jarg2, long jarg3, String jarg4, long jarg5);
  public final static native long BusinessManager_ListenDeviceOnlineStatus__SWIG_0(long jarg1, BusinessManager jarg1_, long jarg2, long jarg3, String jarg4, long jarg5);
  public final static native long BusinessManager_ListenDockLocation__SWIG_0(long jarg1, BusinessManager jarg1_, long jarg2, long jarg3, String jarg4, long jarg5);
  public final static native long BusinessManager_ListenDroneInDock__SWIG_0(long jarg1, BusinessManager jarg1_, long jarg2, long jarg3, String jarg4, long jarg5);
  public final static native int BusinessManager_ListenAircraftLocation__SWIG_1(long jarg1, BusinessManager jarg1_, long jarg2, AircraftLocationCallback jarg2_, long jarg3, SDKSubscribeResultCallback jarg3_, String jarg4, int jarg5);
  public final static native int BusinessManager_ListenAircraftAttitude__SWIG_1(long jarg1, BusinessManager jarg1_, long jarg2, AircraftAttitudeCallback jarg2_, long jarg3, SDKSubscribeResultCallback jarg3_, String jarg4, int jarg5);
  public final static native int BusinessManager_ListenAircraftSpeed__SWIG_1(long jarg1, BusinessManager jarg1_, long jarg2, AircraftSpeedCallback jarg2_, long jarg3, SDKSubscribeResultCallback jarg3_, String jarg4, int jarg5);
  public final static native int BusinessManager_ListenAircraftBatteryInfo__SWIG_1(long jarg1, BusinessManager jarg1_, long jarg2, AircraftBatteryInfoCallback jarg2_, long jarg3, SDKSubscribeResultCallback jarg3_, String jarg4, int jarg5);
  public final static native int BusinessManager_ListenAircraftControlCode__SWIG_1(long jarg1, BusinessManager jarg1_, long jarg2, AircraftControlCodeCallback jarg2_, long jarg3, SDKSubscribeResultCallback jarg3_, String jarg4, int jarg5);
  public final static native int BusinessManager_ListenAircraftWindSpeed__SWIG_1(long jarg1, BusinessManager jarg1_, long jarg2, AircraftWindSpeedCallback jarg2_, long jarg3, SDKSubscribeResultCallback jarg3_, String jarg4, int jarg5);
  public final static native int BusinessManager_ListenAircraftModeCode__SWIG_1(long jarg1, BusinessManager jarg1_, long jarg2, AircraftModeCodeCallback jarg2_, long jarg3, SDKSubscribeResultCallback jarg3_, String jarg4, int jarg5);
  public final static native int BusinessManager_ListenDroneInDock__SWIG_1(long jarg1, BusinessManager jarg1_, long jarg2, DroneInDockCallback jarg2_, long jarg3, SDKSubscribeResultCallback jarg3_, String jarg4, int jarg5);
  public final static native int BusinessManager_ListenDeviceOnlineStatus__SWIG_1(long jarg1, BusinessManager jarg1_, long jarg2, DeviceOnlineStatusCallback jarg2_, long jarg3, SDKSubscribeResultCallback jarg3_, String jarg4, int jarg5);
  public final static native int BusinessManager_ListenAircraftPayloadsList__SWIG_1(long jarg1, BusinessManager jarg1_, long jarg2, AircraftPayloadsListCallback jarg2_, long jarg3, SDKSubscribeResultCallback jarg3_, String jarg4, int jarg5);
  public final static native int BusinessManager_ListenDockLocation__SWIG_1(long jarg1, BusinessManager jarg1_, long jarg2, DockLocationCallback jarg2_, long jarg3, SDKSubscribeResultCallback jarg3_, String jarg4, int jarg5);
  public final static native int BusinessManager_ListenAircraftPayloadsCameraLiveviewWorldRegion__SWIG_1(long jarg1, BusinessManager jarg1_, long jarg2, AircraftPayloadsCameraLiveviewWorldRegionCallback jarg2_, long jarg3, SDKSubscribeResultCallback jarg3_, String jarg4, int jarg5);
  public final static native int BusinessManager_ListenAircraftPayloadsGimbalAttitude__SWIG_1(long jarg1, BusinessManager jarg1_, long jarg2, AircraftPayloadsGimbalAttitudeCallback jarg2_, long jarg3, SDKSubscribeResultCallback jarg3_, String jarg4, int jarg5);
  public final static native void BusinessManager_cancelObserve(long jarg1, BusinessManager jarg1_, int jarg2);
  public final static native void delete_BusinessManager(long jarg1);
  public final static native void delete_ConnectionListener(long jarg1);
  public final static native void ConnectionListener_OnMessage(long jarg1, ConnectionListener jarg1_, String jarg2);
  public final static native void ConnectionListener_OnOpen(long jarg1, ConnectionListener jarg1_);
  public final static native void ConnectionListener_OnClose(long jarg1, ConnectionListener jarg1_);
  public final static native void ConnectionListener_OnError(long jarg1, ConnectionListener jarg1_, String jarg2);
  public final static native long new_ConnectionListener();
  public final static native void ConnectionListener_director_connect(ConnectionListener obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void ConnectionListener_change_ownership(ConnectionListener obj, long cptr, boolean take_or_release);

  public static void SwigDirector_AircraftLocationCallback_invoke(AircraftLocationCallback jself, long message) {
    jself.invoke(new AircraftLocation(message, false));
  }
  public static void SwigDirector_AircraftAttitudeCallback_invoke(AircraftAttitudeCallback jself, long message) {
    jself.invoke(new AircraftAttitude(message, false));
  }
  public static void SwigDirector_AircraftSpeedCallback_invoke(AircraftSpeedCallback jself, long message) {
    jself.invoke(new AircraftSpeed(message, false));
  }
  public static void SwigDirector_AircraftBatteryInfoCallback_invoke(AircraftBatteryInfoCallback jself, long message) {
    jself.invoke(new AircraftBatteryInfo(message, false));
  }
  public static void SwigDirector_AircraftControlCodeCallback_invoke(AircraftControlCodeCallback jself, long message) {
    jself.invoke(new AircraftControlCode(message, false));
  }
  public static void SwigDirector_AircraftWindSpeedCallback_invoke(AircraftWindSpeedCallback jself, long message) {
    jself.invoke(new AircraftWindSpeed(message, false));
  }
  public static void SwigDirector_AircraftModeCodeCallback_invoke(AircraftModeCodeCallback jself, long message) {
    jself.invoke(new AircraftModeCode(message, false));
  }
  public static void SwigDirector_DroneInDockCallback_invoke(DroneInDockCallback jself, long message) {
    jself.invoke(new DroneInDock(message, false));
  }
  public static void SwigDirector_SDKSubscribeResultCallback_invoke(SDKSubscribeResultCallback jself, int result) {
    jself.invoke(NotificationCenterErrorCode.swigToEnum(result));
  }
  public static void SwigDirector_DeviceOnlineStatusCallback_invoke(DeviceOnlineStatusCallback jself, long message) {
    jself.invoke(new DeviceOnlineStatus(message, false));
  }
  public static void SwigDirector_AircraftPayloadsListCallback_invoke(AircraftPayloadsListCallback jself, long message) {
    jself.invoke(new AircraftPayloadsList(message, false));
  }
  public static void SwigDirector_DockLocationCallback_invoke(DockLocationCallback jself, long message) {
    jself.invoke(new DockLocation(message, false));
  }
  public static void SwigDirector_AircraftPayloadsCameraLiveviewWorldRegionCallback_invoke(AircraftPayloadsCameraLiveviewWorldRegionCallback jself, long message) {
    jself.invoke(new AircraftPayloadsCameraLiveviewWorldRegion(message, false));
  }
  public static void SwigDirector_AircraftPayloadsGimbalAttitudeCallback_invoke(AircraftPayloadsGimbalAttitudeCallback jself, long message) {
    jself.invoke(new AircraftPayloadsGimbalAttitude(message, false));
  }
  public static void SwigDirector_ConnectionListener_OnMessage(ConnectionListener jself, String message) {
    jself.OnMessage(message);
  }
  public static void SwigDirector_ConnectionListener_OnOpen(ConnectionListener jself) {
    jself.OnOpen();
  }
  public static void SwigDirector_ConnectionListener_OnClose(ConnectionListener jself) {
    jself.OnClose();
  }
  public static void SwigDirector_ConnectionListener_OnError(ConnectionListener jself, String error) {
    jself.OnError(error);
  }

  private final static native void swig_module_init();
  static {
    swig_module_init();
  }
}
