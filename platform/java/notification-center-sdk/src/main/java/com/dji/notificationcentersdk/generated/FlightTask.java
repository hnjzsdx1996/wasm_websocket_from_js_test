/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.3.1
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.dji.notificationcentersdk.generated;

public class FlightTask {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected FlightTask(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(FlightTask obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected static long swigRelease(FlightTask obj) {
    long ptr = 0;
    if (obj != null) {
      if (!obj.swigCMemOwn)
        throw new RuntimeException("Cannot release ownership as memory is not owned");
      ptr = obj.swigCPtr;
      obj.swigCMemOwn = false;
      obj.delete();
    }
    return ptr;
  }

  @SuppressWarnings({"deprecation", "removal"})
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        notificationcenterJNI.delete_FlightTask(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void setUuid(String value) {
    notificationcenterJNI.FlightTask_uuid_set(swigCPtr, this, value);
  }

  public String getUuid() {
    return notificationcenterJNI.FlightTask_uuid_get(swigCPtr, this);
  }

  public void setName(String value) {
    notificationcenterJNI.FlightTask_name_set(swigCPtr, this, value);
  }

  public String getName() {
    return notificationcenterJNI.FlightTask_name_get(swigCPtr, this);
  }

  public void setTask_type(int value) {
    notificationcenterJNI.FlightTask_task_type_set(swigCPtr, this, value);
  }

  public int getTask_type() {
    return notificationcenterJNI.FlightTask_task_type_get(swigCPtr, this);
  }

  public void setStatus(int value) {
    notificationcenterJNI.FlightTask_status_set(swigCPtr, this, value);
  }

  public int getStatus() {
    return notificationcenterJNI.FlightTask_status_get(swigCPtr, this);
  }

  public void setProgress(int value) {
    notificationcenterJNI.FlightTask_progress_set(swigCPtr, this, value);
  }

  public int getProgress() {
    return notificationcenterJNI.FlightTask_progress_get(swigCPtr, this);
  }

  public void setSn(String value) {
    notificationcenterJNI.FlightTask_sn_set(swigCPtr, this, value);
  }

  public String getSn() {
    return notificationcenterJNI.FlightTask_sn_get(swigCPtr, this);
  }

  public void setFolder_info(FolderInfoData value) {
    notificationcenterJNI.FlightTask_folder_info_set(swigCPtr, this, FolderInfoData.getCPtr(value), value);
  }

  public FolderInfoData getFolder_info() {
    long cPtr = notificationcenterJNI.FlightTask_folder_info_get(swigCPtr, this);
    return (cPtr == 0) ? null : new FolderInfoData(cPtr, false);
  }

  public void setRun_at(int value) {
    notificationcenterJNI.FlightTask_run_at_set(swigCPtr, this, value);
  }

  public int getRun_at() {
    return notificationcenterJNI.FlightTask_run_at_get(swigCPtr, this);
  }

  public void setComplete_at(int value) {
    notificationcenterJNI.FlightTask_complete_at_set(swigCPtr, this, value);
  }

  public int getComplete_at() {
    return notificationcenterJNI.FlightTask_complete_at_get(swigCPtr, this);
  }

  public void setTotal_waypoints(int value) {
    notificationcenterJNI.FlightTask_total_waypoints_set(swigCPtr, this, value);
  }

  public int getTotal_waypoints() {
    return notificationcenterJNI.FlightTask_total_waypoints_get(swigCPtr, this);
  }

  public void setCurrent_waypoint_index(int value) {
    notificationcenterJNI.FlightTask_current_waypoint_index_set(swigCPtr, this, value);
  }

  public int getCurrent_waypoint_index() {
    return notificationcenterJNI.FlightTask_current_waypoint_index_get(swigCPtr, this);
  }

  public void setProgress_version(int value) {
    notificationcenterJNI.FlightTask_progress_version_set(swigCPtr, this, value);
  }

  public int getProgress_version() {
    return notificationcenterJNI.FlightTask_progress_version_get(swigCPtr, this);
  }

  public void setResumable_status(int value) {
    notificationcenterJNI.FlightTask_resumable_status_set(swigCPtr, this, value);
  }

  public int getResumable_status() {
    return notificationcenterJNI.FlightTask_resumable_status_get(swigCPtr, this);
  }

  public void setObstacle_avoidance_notify(int value) {
    notificationcenterJNI.FlightTask_obstacle_avoidance_notify_set(swigCPtr, this, value);
  }

  public int getObstacle_avoidance_notify() {
    return notificationcenterJNI.FlightTask_obstacle_avoidance_notify_get(swigCPtr, this);
  }

  public void setWayline_uuid(String value) {
    notificationcenterJNI.FlightTask_wayline_uuid_set(swigCPtr, this, value);
  }

  public String getWayline_uuid() {
    return notificationcenterJNI.FlightTask_wayline_uuid_get(swigCPtr, this);
  }

  public FlightTask() {
    this(notificationcenterJNI.new_FlightTask(), true);
  }

}
