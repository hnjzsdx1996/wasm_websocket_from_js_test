/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.3.1
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.dji.notificationcentersdk.generated;

public class AircraftBatteryInfo {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected AircraftBatteryInfo(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(AircraftBatteryInfo obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected static long swigRelease(AircraftBatteryInfo obj) {
    long ptr = 0;
    if (obj != null) {
      if (!obj.swigCMemOwn)
        throw new RuntimeException("Cannot release ownership as memory is not owned");
      ptr = obj.swigCPtr;
      obj.swigCMemOwn = false;
      obj.delete();
    }
    return ptr;
  }

  @SuppressWarnings({"deprecation", "removal"})
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        notificationcenterJNI.delete_AircraftBatteryInfo(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void setBatteries(SWIGTYPE_p_std__vectorT_BatteryInfo_t value) {
    notificationcenterJNI.AircraftBatteryInfo_batteries_set(swigCPtr, this, SWIGTYPE_p_std__vectorT_BatteryInfo_t.getCPtr(value));
  }

  public SWIGTYPE_p_std__vectorT_BatteryInfo_t getBatteries() {
    long cPtr = notificationcenterJNI.AircraftBatteryInfo_batteries_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_std__vectorT_BatteryInfo_t(cPtr, false);
  }

  public void setCapacity_percent(int value) {
    notificationcenterJNI.AircraftBatteryInfo_capacity_percent_set(swigCPtr, this, value);
  }

  public int getCapacity_percent() {
    return notificationcenterJNI.AircraftBatteryInfo_capacity_percent_get(swigCPtr, this);
  }

  public void setLanding_power(int value) {
    notificationcenterJNI.AircraftBatteryInfo_landing_power_set(swigCPtr, this, value);
  }

  public int getLanding_power() {
    return notificationcenterJNI.AircraftBatteryInfo_landing_power_get(swigCPtr, this);
  }

  public void setRemain_flight_time(int value) {
    notificationcenterJNI.AircraftBatteryInfo_remain_flight_time_set(swigCPtr, this, value);
  }

  public int getRemain_flight_time() {
    return notificationcenterJNI.AircraftBatteryInfo_remain_flight_time_get(swigCPtr, this);
  }

  public void setReturn_home_power(int value) {
    notificationcenterJNI.AircraftBatteryInfo_return_home_power_set(swigCPtr, this, value);
  }

  public int getReturn_home_power() {
    return notificationcenterJNI.AircraftBatteryInfo_return_home_power_get(swigCPtr, this);
  }

  public AircraftBatteryInfo() {
    this(notificationcenterJNI.new_AircraftBatteryInfo(), true);
  }

}
